A) Absolute vs Relative paths
1.No, . is the current directory.
2.No, / is the root directory.
3.No, home directory in this case is /Users/amanda and not /home/amanda
4.No, ../.. will go up two levels and it will be in /Users
5.Yes, ~ goes to home directory which is /Users/amanda in this case.
6.No, this will go to directory called "home" in the current directory which doesn't likely exist.
7.Yes, ~/data goes to data directory in home directory and .. goes one level up so it will end up in the home directory again.
8.Yes, no argument in front of cd will go up to home directory.
9.Yes, it will go up one level from current /Users/amanda/data/ so it will end up in /Users/amanda or home directory.



B) Realtive Path Resolution
1.No, because directory backup in /Users exists.
2.No, these are the contents of Users/think/backup, but ls ../backup asks for the contents of te backup directory.
3.No, again these are the content of Users/think/backup and not ../backup. Also, flag -F was not used. Hence, all / at the end of directory names are wrong.
4.Yes, these are the contents of the ../backup which refers to /Users/backup.





























